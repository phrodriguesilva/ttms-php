version: '3.8'

services:
  # PHP Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ttms-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - ttms-network

  # Nginx Service
  nginx:
    image: nginx:1.19-alpine
    container_name: ttms-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx:/etc/nginx/conf.d/
    networks:
      - ttms-network

  # MySQL Service
  mysql:
    image: mysql:8.0
    container_name: ttms-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
      - "3306:3306"
    volumes:
      - ./docker/mysql:/docker-entrypoint-initdb.d
      - mysql-data:/var/lib/mysql
    networks:
      - ttms-network

  # Redis Service
  redis:
    image: redis:alpine
    container_name: ttms-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - ttms-network

  # Laravel Echo Server for WebSockets
  laravel-echo:
    image: node:16-alpine
    container_name: ttms-echo
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./:/app
    ports:
      - "6001:6001"
    command: sh -c "npm install -g laravel-echo-server && laravel-echo-server start"
    networks:
      - ttms-network

networks:
  ttms-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
